{
  "cmake.pinnedCommands": [
    "workbench.action.tasks.configureTaskRunner",
    "workbench.action.tasks.runTask"
  ],
  "editor.renderWhitespace": "all",
  "C_Cpp.default.compilerPath": "/usr/bin/clang++",
  "vim.leader": " ",
  "vim.useSystemClipboard": true,

  // highlight yanked text
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.color": "#a9dc7660",
  "vim.highlightedyank.duration": 250,


  "vim.normalModeKeyBindings": [
    {
      "before": [
        "<leader>",
        "a"
      ],
      "commands": [
        "workbench.view.explorer"
      ]
    },
    {
      "before": [
        "<leader>",
        "p"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
  ],

  "vim.normalModeKeyBindingsNonRecursive": [
    {
      // Pressing the leader key (Spacebar) followed by d deletes the current line.
      "before": ["<leader>", "d"],
      "after": ["d", "d"]
    },
    {
      // Pressing ctrl+n clears search highlighting
      "before": ["<C-n>"],
      "commands": [":nohl"]
    },
    {
      // Pressing K inserts a line break above the cursor.
      "before": ["K"],
      "commands": ["lineBreakInsert"],
      "silent": true
    },
    {
      // Pressing the leader key (Spacebar) followed by w splits the editor.
      "before": ["<leader>", "w"],
      "commands": ["workbench.action.splitEditor"]
    },
    {
      // Pressing the leader key (Spacebar) followed by e toggles the sidebar visibility.
      "before": ["<leader>", "e"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<leader>", "d"],
      "commands": ["workbench.action.to"]
    },
    {
       // Pressing the leader key (Spacebar) followed by c comments the current line.
      "before": ["<leader>", "c"],
      "commands": ["editor.action.commentLine"]
    },
    {
      // Pressing the leader key (Spacebar) followed by f reveals the current file in the Explorer.
      "before": ["<leader>", "f"],
      "commands": ["revealInExplorer"]
    },
    {
      // Pressing the leader key (Spacebar) followed by r and then e renames the current symbol.
      "before": ["<leader>", "r", "e"],
      "commands": ["editor.action.rename"]
    },
    {
      // Pressing the leader key (Spacebar) followed by r and then f renames the current file.
      "before": ["<leader>", "r", "f"],
      "commands": ["fileutils.renameFile"]
    },
    {
      // Pressing the leader key (Spacebar) followed by o, g shows all symbols in the workspace.
      "before": ["<leader>", "o", "g"],
      "commands": ["workbench.action.showAllSymbols"]
    },
    {
       // Pressing the leader key (Spacebar) followed by o, o shows all open editors in the active group.
      "before": ["<leader>", "o", "o"],
      "commands": ["workbench.action.showEditorsInActiveGroup"]
    },
    {
      // Pressing the leader key (Spacebar) followed by o, p opens the quick open panel.
      "before": ["leader", "o", "p"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      //  Pressing m followed by a toggles numbered bookmark 1.
      "before": ["m", "a"],
      "commands": ["numberedBookmarks.toggleBookmark1"]
    },
    {
      // Pressing ' followed by a jumps to numbered bookmark 1.
      "key": "' a",
      "command": "numberedBookmarks.jumpToBookmark1",
      "when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
    },
    {
      // Move editor to next group
      "before": ["leader", "m", "l"],
      "commands":["workbench.action.moveEditorToNextGroup"],
      "when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
    },
    {
      // Move editor to previous group
      "before": ["leader", "m", "h"],
      "commands":["workbench.action.moveEditorToPreviousGroup"],
      "when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
    }
  ],
  "editor.cursorSurroundingLines": 8,
  "editor.minimap.enabled": false,
  "editor.wordWrap": "on",
  "editor.scrollbar.vertical": "hidden",
  "redhat.telemetry.enabled": false,
  "files.autoSave": "onWindowChange",
  "cmake.showOptionsMovedNotification": false,
  "C_Cpp.intelliSenseEngine": "disabled",
  "cmake.debugConfig": {
    "args": ["../ips_small.tsv"]
  },
}
